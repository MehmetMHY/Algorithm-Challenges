%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Mehmet Yilmaz
%%Title: Window .!canvas
%%CreationDate: Mon Oct 19 11:17:41 2020
%%BoundingBox: -140 -22 753 815
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.9997 0.9997 scale
4 -419 translate
-451 838 moveto 443 838 lineto 443 0 lineto -451 0 lineto closepath clip newpath
gsave
grestore
gsave
grestore
gsave
0 415 moveto
4.28626379701574e-16 422 lineto
7 422 lineto
7 415 lineto
14 415 lineto
14 408 lineto
7 408 lineto
7 401 lineto
14 401 lineto
14 394 lineto
7 394 lineto
7 401 lineto
-8.88178419700125e-16 401 lineto
-4.59552039998552e-16 394 lineto
-7 394 lineto
-7 387 lineto
-8.88178419700125e-16 387 lineto
-4.59552039998552e-16 380 lineto
-7 380 lineto
-7 387 lineto
-14 387 lineto
-14 394 lineto
-7 394 lineto
-7 401 lineto
-14 401 lineto
-14 394 lineto
-21 394 lineto
-21 401 lineto
-28 401 lineto
-28 394 lineto
-35 394 lineto
-35 387 lineto
-28 387 lineto
-28 380 lineto
-35 380 lineto
-35 387 lineto
-42 387 lineto
-42 394 lineto
-35 394 lineto
-35 401 lineto
-42 401 lineto
-42 408 lineto
-35 408 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
-35 408 moveto
-35 401 lineto
-28 401 lineto
-28 408 lineto
-21 408 lineto
-21 415 lineto
-28 415 lineto
-28 408 lineto
-35 408 lineto
-35 415 lineto
-42 415 lineto
-42 422 lineto
-35 422 lineto
-35 429 lineto
-42 429 lineto
-42 422 lineto
-49 422 lineto
-49 429 lineto
-56 429 lineto
-56 422 lineto
-63 422 lineto
-63 415 lineto
-56 415 lineto
-56 408 lineto
-63 408 lineto
-63 415 lineto
-70 415 lineto
-70 422 lineto
-63 422 lineto
-63 429 lineto
-70 429 lineto
-70 436 lineto
-63 436 lineto
-63 429 lineto
-56 429 lineto
-56 436 lineto
-49 436 lineto
-49 443 lineto
-56 443 lineto
-56 450 lineto
-49 450 lineto
-49 443 lineto
-42 443 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-42 443 moveto
-42 436 lineto
-49 436 lineto
-49 429 lineto
-42 429 lineto
-42 436 lineto
-35 436 lineto
-35 429 lineto
-28 429 lineto
-28 436 lineto
-21 436 lineto
-21 443 lineto
-28 443 lineto
-28 436 lineto
-35 436 lineto
-35 443 lineto
-42 443 lineto
-42 450 lineto
-35 450 lineto
-35 457 lineto
-42 457 lineto
-42 464 lineto
-35 464 lineto
-35 457 lineto
-28 457 lineto
-28 464 lineto
-21 464 lineto
-21 471 lineto
-28 471 lineto
-28 464 lineto
-35 464 lineto
-35 471 lineto
-42 471 lineto
-42 478 lineto
-35 478 lineto
-35 485 lineto
-42 485 lineto
-42 478 lineto
-49 478 lineto
-49 485 lineto
-56 485 lineto
-56 478 lineto
-63 478 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-63 478 moveto
-63 471 lineto
-56 471 lineto
-56 464 lineto
-63 464 lineto
-63 471 lineto
-70 471 lineto
-70 478 lineto
-63 478 lineto
-63 485 lineto
-70 485 lineto
-70 492 lineto
-63 492 lineto
-63 485 lineto
-56 485 lineto
-56 492 lineto
-49 492 lineto
-49 499 lineto
-56 499 lineto
-56 506 lineto
-49 506 lineto
-49 499 lineto
-42 499 lineto
-42 492 lineto
-49 492 lineto
-49 485 lineto
-42 485 lineto
-42 492 lineto
-35 492 lineto
-35 485 lineto
-28 485 lineto
-28 492 lineto
-21 492 lineto
-21 499 lineto
-28 499 lineto
-28 506 lineto
-21 506 lineto
-21 499 lineto
-14 499 lineto
-14 492 lineto
-21 492 lineto
-21 485 lineto
-14 485 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
-14 485 moveto
-14 478 lineto
-21 478 lineto
-21 485 lineto
-28 485 lineto
-28 478 lineto
-35 478 lineto
-35 471 lineto
-28 471 lineto
-28 478 lineto
-21 478 lineto
-21 471 lineto
-14 471 lineto
-14 464 lineto
-21 464 lineto
-21 457 lineto
-14 457 lineto
-14 464 lineto
-6.99999999999998 464 lineto
-6.99999999999998 457 lineto
2.48689957516035e-14 457 lineto
2.35831166124988e-14 464 lineto
7.00000000000002 464 lineto
7.00000000000002 471 lineto
2.30926389122033e-14 471 lineto
2.35212652919048e-14 464 lineto
-6.99999999999998 464 lineto
-6.99999999999998 471 lineto
-14 471 lineto
-14 478 lineto
-6.99999999999998 478 lineto
-6.99999999999998 485 lineto
-14 485 lineto
-14 492 lineto
-6.99999999999998 492 lineto
-6.99999999999998 485 lineto
1.77635683940025e-14 485 lineto
1.64776892548978e-14 492 lineto
7.00000000000002 492 lineto
7.00000000000002 499 lineto
1.59872115546023e-14 499 lineto
1.47013324154975e-14 506 lineto
7.00000000000002 506 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
7.00000000000002 506 moveto
7.00000000000002 499 lineto
14 499 lineto
14 492 lineto
7.00000000000002 492 lineto
7.00000000000002 485 lineto
14 485 lineto
14 492 lineto
21 492 lineto
21 485 lineto
28 485 lineto
28 492 lineto
35 492 lineto
35 499 lineto
28 499 lineto
28 492 lineto
21 492 lineto
21 499 lineto
14 499 lineto
14 506 lineto
21 506 lineto
21 513 lineto
14 513 lineto
14 520 lineto
21 520 lineto
21 513 lineto
28 513 lineto
28 520 lineto
35 520 lineto
35 527 lineto
28 527 lineto
28 520 lineto
21 520 lineto
21 527 lineto
14 527 lineto
14 534 lineto
21 534 lineto
21 541 lineto
14 541 lineto
14 534 lineto
7.00000000000003 534 lineto
7.00000000000003 541 lineto
2.75335310107039e-14 541 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
2.75335310107039e-14 541 moveto
2.79621573904055e-14 534 lineto
-6.99999999999997 534 lineto
-6.99999999999997 527 lineto
2.75335310107039e-14 527 lineto
2.79621573904055e-14 520 lineto
-6.99999999999997 520 lineto
-6.99999999999997 527 lineto
-14 527 lineto
-14 534 lineto
-6.99999999999998 534 lineto
-6.99999999999998 541 lineto
-14 541 lineto
-14 548 lineto
-6.99999999999998 548 lineto
-6.99999999999998 541 lineto
2.48689957516035e-14 541 lineto
2.35831166124988e-14 548 lineto
7.00000000000002 548 lineto
7.00000000000002 555 lineto
2.30926389122033e-14 555 lineto
2.18067597730985e-14 562 lineto
7.00000000000002 562 lineto
7.00000000000002 555 lineto
14 555 lineto
14 548 lineto
7.00000000000003 548 lineto
7.00000000000003 541 lineto
14 541 lineto
14 548 lineto
21 548 lineto
21 541 lineto
28 541 lineto
28 548 lineto
35 548 lineto
35 555 lineto
28 555 lineto
28 562 lineto
35 562 lineto
35 555 lineto
42 555 lineto
42 548 lineto
35 548 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
35 548 moveto
35 541 lineto
42 541 lineto
42 534 lineto
35 534 lineto
35 541 lineto
28 541 lineto
28 534 lineto
21 534 lineto
21 527 lineto
28 527 lineto
28 534 lineto
35 534 lineto
35 527 lineto
42 527 lineto
42 520 lineto
35 520 lineto
35 513 lineto
42 513 lineto
42 520 lineto
49 520 lineto
49 513 lineto
56 513 lineto
56 520 lineto
63 520 lineto
63 527 lineto
56 527 lineto
56 534 lineto
63 534 lineto
63 527 lineto
70 527 lineto
70 520 lineto
63 520 lineto
63 513 lineto
70 513 lineto
70 506 lineto
63 506 lineto
63 513 lineto
56 513 lineto
56 506 lineto
49 506 lineto
49 499 lineto
56 499 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
56 499 moveto
56 492 lineto
49 492 lineto
49 499 lineto
42 499 lineto
42 506 lineto
49 506 lineto
49 513 lineto
42 513 lineto
42 506 lineto
35 506 lineto
35 513 lineto
28 513 lineto
28 506 lineto
21 506 lineto
21 499 lineto
28 499 lineto
28 506 lineto
35 506 lineto
35 499 lineto
42 499 lineto
42 492 lineto
35 492 lineto
35 485 lineto
42 485 lineto
42 478 lineto
35 478 lineto
35 485 lineto
28 485 lineto
28 478 lineto
21 478 lineto
21 471 lineto
28 471 lineto
28 478 lineto
35 478 lineto
35 471 lineto
42 471 lineto
42 464 lineto
35 464 lineto
35 457 lineto
42 457 lineto
42 464 lineto
49 464 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
49 464 moveto
49 457 lineto
56 457 lineto
56 464 lineto
63 464 lineto
63 471 lineto
56 471 lineto
56 464 lineto
49 464 lineto
49 471 lineto
42 471 lineto
42 478 lineto
49 478 lineto
49 485 lineto
42 485 lineto
42 492 lineto
49 492 lineto
49 485 lineto
56 485 lineto
56 492 lineto
63 492 lineto
63 499 lineto
56 499 lineto
56 506 lineto
63 506 lineto
63 499 lineto
70 499 lineto
70 492 lineto
63 492 lineto
63 485 lineto
70 485 lineto
70 492 lineto
77 492 lineto
77 485 lineto
84 485 lineto
84 492 lineto
91 492 lineto
91 499 lineto
84 499 lineto
84 506 lineto
91 506 lineto
91 499 lineto
98 499 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98 499 moveto
98 492 lineto
91 492 lineto
91 485 lineto
98 485 lineto
98 478 lineto
91 478 lineto
91 485 lineto
84 485 lineto
84 478 lineto
77 478 lineto
77 471 lineto
84 471 lineto
84 478 lineto
91 478 lineto
91 471 lineto
98 471 lineto
98 464 lineto
91 464 lineto
91 457 lineto
98 457 lineto
98 464 lineto
105 464 lineto
105 457 lineto
112 457 lineto
112 464 lineto
119 464 lineto
119 471 lineto
112 471 lineto
112 464 lineto
105 464 lineto
105 471 lineto
98 471 lineto
98 478 lineto
105 478 lineto
105 485 lineto
98 485 lineto
98 492 lineto
105 492 lineto
105 485 lineto
112 485 lineto
112 492 lineto
119 492 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
119 492 moveto
119 499 lineto
112 499 lineto
112 506 lineto
119 506 lineto
119 499 lineto
126 499 lineto
126 492 lineto
119 492 lineto
119 485 lineto
126 485 lineto
126 492 lineto
133 492 lineto
133 485 lineto
140 485 lineto
140 492 lineto
147 492 lineto
147 499 lineto
140 499 lineto
140 492 lineto
133 492 lineto
133 499 lineto
126 499 lineto
126 506 lineto
133 506 lineto
133 513 lineto
126 513 lineto
126 520 lineto
133 520 lineto
133 513 lineto
140 513 lineto
140 520 lineto
147 520 lineto
147 527 lineto
140 527 lineto
140 520 lineto
133 520 lineto
133 527 lineto
126 527 lineto
126 534 lineto
133 534 lineto
133 541 lineto
126 541 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
restore showpage

%%Trailer
end
%%EOF
